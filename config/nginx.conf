worker_processes 1;
#daemon off;

events {
 worker_connections 1024;
}

http {



#upstream data.vlaanderen.be {
#  server data.vlaanderen.be:4000;
#  keepalive 600;
#}

proxy_cache_path /var/cache/nginx/tag levels=1:2 keys_zone=tag:10m inactive=1d max_size=10g;

server {
  listen 80;
  server_name ENV_SERVICE_URL;
  default_type application/json;

  access_log /nginx/logs/scache.access.log ;
  error_log /nginx/logs/scache.error.log ;

  client_max_body_size 2m;
  client_body_buffer_size 2m;

  # the magic trick: md5 hash the query and use it as a key
  set $request_body_md5 "";
  rewrite_by_lua '
    ngx.req.read_body()
    local body = ngx.req.get_body_data()
    ngx.var.request_body_md5 = ngx.md5(body)
  ';

  location / {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header Connection "simple sparql cache";

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_cache tag;
    proxy_cache_key "$uri|$query_string|$request_body_md5";
    proxy_cache_valid  200 302 ENV_SUCCESS_REQUEST_CACHE_DURATION;
    proxy_cache_valid  404 ENV_FAILED_REQUEST_CACHE_DURATION;
    proxy_cache_methods GET HEAD POST;

    add_header X-Cache-Status $upstream_cache_status;

    proxy_pass ENV_SPARQL_ENDPOINT_SERVICE_URL ;
  }
}

}
